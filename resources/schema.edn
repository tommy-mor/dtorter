{:objects
 {:User
  {:description "a user in the system"
   :fields
   {:id {:type (non-null ID)}
    :name {:type (non-null String)}}}
  
  :Tag
  {:description "a collection of items"
   :fields
   {:id {:type (non-null ID)}
    :name {:type (non-null String)}
    :description {:type String}
    :members {:type (list :Item)
              :resolve :Tag/items}
    :votes {:args {:info {:type (non-null :Tagrefreshinfo)}}
            :type (list :Vote)
            :resolve :Tag/votes}
    :sorted {:args {:info {:type (non-null :Tagrefreshinfo)}}
             :type (list :Item)
             :resolve :Tag/sorted}
    :unsorted {:args {:info {:type (non-null :Tagrefreshinfo)}}
               :type (list :Item)
               :resolve :Tag/unsorted}
    :attributes {:type (list :String)
                 :resolve :Tag/attributes}
    :attributecounts {:type (list :Int)
                      :resolve :Tag/attributecounts}
    :pair {:type :Pair
           :resolve :Tag/pair}
    :owner {:type :User
            :resolve :All/owner}

    :votecount {:type Int :resolve :Tag/votecount}
    :usercount {:type Int :resolve :Tag/usercount}
    :itemcount {:type Int :resolve :Tag/itemcount}

    :users {:type (list :User) :resolve :Tag/users
            :description "every user who has voted on this tag"}}}
  
  :Item
  {:description "a named url/link/item in the system that can be voted on"
   :fields
   {:id {:type (non-null ID)}
    
    :name {:type (non-null String)}
    :paragraph {:type String}
    :url {:type String}
    
    :elo {:type Float}
    :tags {:type (list :Tag)
           :resolve :Item/tags}
    :votecount {:type Int}}}
  
  :Pair
  {:description "two items, to be voted on"
   :fields
   {:left {:type :Item}
    :right {:type :Item}}}
  
  :Vote
  {:description "a vote between to items, in a tag, with an attribute"
   :fields
   {:id {:type (non-null ID)}
    :tag {:type (non-null :Tag)
          :resolve :Vote/tag}
    :left_item {:type (non-null :Item)
                :resolve :Vote/left-item}
    :right_item {:type (non-null :Item)
                 :resolve :Vote/right-item}
    
    :attribute {:type (non-null :String)}
    :magnitude {:type (non-null :Int)}}}}
  

 :queries
 {:all_tags
  {:type (list :Tag)
   :description "return a list of all (public) tags"
   :args {}
   :resolve :query/all-tags}}

 :input-objects
 {:Tagrefreshinfo
  {:description "the info needed to render a full tag/item page"
   :fields
   {:tagid {:type (non-null ID)}
    :itemid {:type ID}
    :attribute {:type String}
    :user {:type ID}}}
  :VoteInputs
  {:description "the info needed to create a new vote"
   :fields
   {:tagid {:type (non-null ID)}
    :left_item {:type (non-null ID)}
    :right_item {:type (non-null ID)}
    :attribute {:type (non-null String)}
    :magnitude {:type (non-null Int)}}}
  :ItemInputs
  {:description "the info needed to create/edit an item"
   :fields
   {:tagid {:type (non-null ID)}
    :name {:type (non-null String)}
    :url {:type String}
    :description {:type String}}}}
 
 :mutations
 {:tag_by_id
  {:type :Tag
   :description "return a tag based on its unique id, if it exists"
   :args {:info {:type :Tagrefreshinfo}}
   :resolve :query/tag-by-id}
  
  :item_by_id
  {:type :Item
   :description "return an item based on its id, if it exists"
   :args {:info {:type :Tagrefreshinfo}}
   :resolve :query/item-by-id}
  
  :vote
  {:type (non-null :Vote)
   :description "vote on an item"
   :args {:vote_info {:type (non-null :VoteInputs)}}
   :resolve :mutation/vote}
  
  :delvote
  {:type (non-null :Vote)
   :description "delete a vote"
   :args {:voteid {:type (non-null ID)}}
   :resolve :mutation/delvote}

  :additem
  {:type (non-null :Item)
   :description "add an item"
   :args {:item_info {:type (non-null :ItemInputs)}}
   :resolve :mutation/additem}}}
